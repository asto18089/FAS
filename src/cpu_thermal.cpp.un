#include <iostream>
#include <thread>
#include <filesystem>
#include <string>
#include <array>

using std::string;
using std::array;
using namespace std::filesystem;

Cputhermal::Cputhermal()
{
    const array<const char*> TYPENAMES = {"soc_max", "soc_top", "cpu_big", "soc", "cpu"};
    
    auto node_finder = [&](const char* type)
    {
        for (const auto& entry : directory_iterator("/sys/devices/virtual/thermal"))
        {
            if (! entry.is_directory())
                continue;       
                
            const path& type_file = entry.path() / "type";
            if (exists(type_file) && is_regular_file(type_file) && status(type_file).permissions() & perms::owner_read)
            {
                std::ifstream ifs(type_file);
                string content;
                std::getline(ifs, content);
                if (ifs.find(type))
                {
                    temp_node.open(entry.path() / "temp");
                    return true;
                }
            }
        }
        return false;
    };
    
    for (const auto& i : TYPENAMES)
    {
        if (node_finder(i))
            break;
    }
}